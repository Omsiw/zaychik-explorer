import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import axios from '../api/axios';
import { socketService } from '../services/socketService';
import { jwtDecode } from 'jwt-decode';

function ProfilePage() {
  const [isSearching, setIsSearching] = useState(false);
  const navigate = useNavigate();

  useEffect(() => {
    socketService.connect(() => {
      console.log("WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω, –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–ø–∏—Å–∫–µ.");
    });

    return () => {
      socketService.disconnect();
    };
  }, []); 

  const handleStartSearch = async () => {
    setIsSearching(true);
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        alert("–û—à–∏–±–∫–∞: –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.");
        setIsSearching(false);
        return;
      }

      const userData = jwtDecode(token);
      const userName = userData.sub; 

      if (!userName) {
        alert("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–æ–∫–µ–Ω–∞.");
        console.error("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–æ–∫–µ–Ω–∞:", userData);
        setIsSearching(false);
        return;
      }
      
      const topic = `/topic/user/${userName}/match-found`;
      console.log(`[–û–¢–õ–ê–î–ö–ê] –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –ª–∏—á–Ω—ã–π –∫–∞–Ω–∞–ª: ${topic}`);

      socketService.subscribe(topic, (matchData) => {
        console.log('[–û–¢–õ–ê–î–ö–ê] ‚úÖ –ü–û–õ–£–ß–ï–ù–û –°–û–û–ë–©–ï–ù–ò–ï –û –ú–ê–¢–ß–ï!', matchData);
        setIsSearching(false);

        if (!matchData.matchId || !matchData.startingCellNum) {
            console.error("[–û–¢–õ–ê–î–ö–ê] –í –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç matchId –∏–ª–∏ startingCell.id", matchData);
            alert("–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –º–∞—Ç—á–µ.");
            return;
        }

        localStorage.setItem('matchId', matchData.matchId);
        localStorage.setItem('currentCellNum', matchData.startingCellNum);
        localStorage.setItem('enemies', JSON.stringify(matchData.enemies));
        
        console.log(`[–û–¢–õ–ê–î–ö–ê] –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É /match/${matchData.matchId}`);
        navigate(`/match/${matchData.matchId}`);
      });

      await axios.post('/match/search');

    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º–∞—Ç—á–∞:", err);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –º–∞—Ç—á–∞");
      setIsSearching(false);
    }
  };

  return (
    <div className="profile-container">
      <h1>–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞</h1>
      <p>–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?</p>
      <button onClick={handleStartSearch} disabled={isSearching}>
        {isSearching ? '‚è≥ –ò–¥–µ—Ç –ø–æ–∏—Å–∫ –º–∞—Ç—á–∞...' : 'üéÆ –ù–∞–π—Ç–∏ –∏–≥—Ä—É'}
      </button>
    </div>
  );
}

export default ProfilePage;